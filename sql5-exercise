SELECT * FROM sample51;
SELECT COUNT(*) FROM sample51;

SELECT * FROM sample51 WHERE name = 'A';
SELECT COUNT(*) FROM sample51 WHERE name = 'A';


SELECT * FROM sample51;
SELECT COUNT(no), COUNT(name) FROM sample51;


SELECT * FROM sample51;
SELECT ALL name FROM sample51;
SELECT DISTINCT name FROM sample51;


SELECT COUNT(ALL name), COUNT(DISTINCT name) FROM sample51;



SELECT * FROM sample51;
SELECT SUM(quantity) FROM sample51;


SELECT * FROM sample51;
SELECT AVG(quantity), SUM(quantity)/COUNT(quantity) FROM sample51;
SELECT AVG(CASE WHEN quantity IS NULL THEN 0 ELSE quantity END) AS avgnull0 FROM sample51;


SELECT * FROM sample51;
SELECT MIN(quantity), MAX(quantity), MIN(name), MAX(name) FROM sample51;



SELECT * FROM sample51;
SELECT name FROM sample51 GROUP BY name;

SELECT name, COUNT(name), SUM(quantity) FROM sample51 GROUP BY name;


SELECT name, COUNT(name) FROM sample51 GROUP BY name;
SELECT name, COUNT(name) FROM sample51 GROUP BY name HAVING COUNT(name) = 1;


SELECT MIN(no), name, SUM(quantity) FROM sample51 GROUP BY name;
SELECT name, quantity FROM sample51 GROUP BY name, quantity;


SELECT name, COUNT(name), SUM(quantity) FROM sample51 GROUP BY name ORDER BY SUM(quantity) DESC;



SELECT * FROM sample54;
SELECT MIN(a) FROM sample54;

DELETE FROM sample54 WHERE a = (SELECT MIN(a) FROM sample54);
SELECT * FROM sample54;


SELECT MIN(a) FROM sample54;
SELECT no FROM sample54;
SELECT MIN(a), MAX(no) FROM sample54;
SELECT no, a FROM sample54;


SELECT
  (SELECT COUNT(*) FROM sample51) AS sq1,
  (SELECT COUNT(*) FROM sample54) AS sq2;
SELECT
  (SELECT COUNT(*) FROM sample51) AS sq1,
  (SELECT COUNT(*) FROM sample54) AS sq2 FROM DUAL;


UPDATE sample54 SET a = (SELECT MAX(a) FROM sample54);


SELECT * FROM (SELECT * FROM sample54) sq;
SELECT * FROM (SELECT * FROM sample54) AS sq;
SELECT * FROM (SELECT * FROM (SELECT * FROM sample54) sq1) sq;


INSERT INTO sample541 VALUES (
  (SELECT COUNT(*) FROM sample51),
  (SELECT COUNT(*) FROM sample54)
);
SELECT * FROM sample541;

INSERT INTO sample541 SELECT 1, 2;
SELECT * FROM sample541;

INSERT INTO sample542 SELECT * FROM sample543;



SELECT * FROM sample551;
SELECT * FROM sample552;

UPDATE sample551 SET a = ‘있음’ WHERE
  EXISTS (SELECT * FROM sample552 WHERE no2 = no);
SELECT * FROM sample551;


UPDATE sample551 SET a = ‘없음’ WHERE
  NOT EXISTS (SELECT * FROM sample552 WHERE no2 = no);
SELECT * FROM sample551;


UPDATE sample551 SET a = ‘없음’ WHERE
  NOT EXISTS (SELECT * FROM sample552 WHERE no2 = no);
SELECT * FROM sample551;

UPDATE sample551 SET a = '있음' WHERE EXISTS (SELECT * FROM sample552 WHERE sample552.no2 = sample551.no);


SELECT * FROM sample551 WHERE no IN (3, 5);

SELECT * FROM sample551 WHERE no IN (SELECT no2 FROM sample552);


CREATE TABLE 메이커 (
  메이커코드 CHAR(4) NOT NULL,
  메이커명 VARCHAR(30),
  PRIMARY KEY (메이커코드)
);

SELECT S.상품명, M.메이커명
  FROM 상품2 S INNER JOIN 메이커 M
    ON S.메이커코드 = M.메이커코드;

SELECT S1.상품명, S2.상품명
  FROM 상품 S1 INNER JOIN 상품 S2
    ON S1.상품코드 = S2.상품코드;



SELECT 상품3.상품명, 재고수.재고수
FROM 상품3 INNER JOIN 재고수
ON 상품3.상품코드 = 재고수.상품코드
WHERE 상품3.상품분류 = ‘식료품’;


SELECT 상품3.상품명, 재고수.재고수
  FROM 상품3, 재고수
  WHERE 상품3.상품코드 = 재고수.상품코드 (+)
    AND 상품3.상품분류 = '식료품';



SELECT * FROM A UNION SELECT * FROM B;

SELECT * FROM A EXCEPT SELECT * FROM B;

SELECT * FROM A INTERSECT SELECT * FROM B;

SELECT * FROM A, B;
SELECT * FROM A CROSS JOIN B;

SELECT * FROM A WHERE no < 3;

SELECT a FROM A;

SELECT a FROM A INNER JOIN B ON A.no = B.no;
